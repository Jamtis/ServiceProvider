"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _url=require("url"),_url2=_interopRequireDefault(_url),_querystring=require("querystring"),_querystring2=_interopRequireDefault(_querystring);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class ServiceProvider{constructor(e,t={}){Object.defineProperties(this,{service_manifest:{value:e,enumerable:!0}}),this.logging=t.logging,"function"==typeof t.isAuthorized&&(this.isAuthorized=t.isAuthorized)}async handleRequest(e,t){try{const r=await this.analyzeRequest(e);this.logging&&console.log("request analyzed",r),this.checkRequest(r,t)&&await this.invokeServiceFunctions(r,t)}catch(e){console.error(e)}finally{try{t.end()}catch(e){console.error(e)}}}async invokeServiceFunctions(e,t){const r=new Map,s={},o=e.body_parameters;for(const t in o){let n;try{n=this.service_manifest[t]}catch(e){console.error(e)}if("function"==typeof n)if(this.isAuthorized(t,e.authorization))try{r.set(t,n.call(this.service_manifest,o[t]))}catch(e){console.error(e),e instanceof Error?s[t]={status:500,reason:"Service function encountered an error"}:s[t]=e}else s[t]={status:401,reason:"Unauthorized"};else s[t]={status:501,reason:"Service not implemented"}}for(const[e,t]of r)try{s[e]={status:200,value:await t}}catch(t){console.error(t),t instanceof Error?s[e]={status:500,reason:"unknown"}:s[e]=t}t.writeHead(200,{}),this.logging&&console.log("respond with",s),t.write(JSON.stringify(s)),t.end()}async analyzeRequest(e){const t=_url2.default.parse(e.url);let r="";e.on("data",e=>{r+=e.toString()}),await new Promise((t,r)=>{e.on("end",e=>{e?r(e):t()})});const s=_querystring2.default.parse(t.query);for(const e in s)s[e]=decodeURIComponent(s[e]);let o={};try{o=JSON.parse(r)}catch(e){""!=r&&console.error(e)}const n=!e.headers.accept||/(application\/(json|\*)|\*\/\*)/g.test(e.headers.accept),{authorization:i}=e.headers;let a,c;if(i){const e=Buffer.from(i.match(/Basic\ (.+)/)[1],"base64").toString();[,a,c]=e.match(/^([^:]+?):(.*)$/)}return{method:e.method,headers:e.headers,pathname:t.pathname,data:r,query_parameters:s,body_parameters:o,accepted:n,authorization:{user:a,password:c}}}checkRequest(e,t){switch(e.method){case"POST":if(this.logging&&console.log("[32m","Check",e.method,"request",e.pathname,"[0m"),e.accepted)return!0;t.writeHead(406,{Accept:["application/json"]});break;case"OPTIONS":this.logging&&console.log("[35m","Detected",e.method,"request","[0m"),t.writeHead(200,{"Access-Control-Request-Methods":"OPTIONS","Access-Control-Allow-Methods":"POST,OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"});break;default:t.writeHead(405,{Allow:"OPTIONS,POST"})}}isAuthorized(e,{user:t,password:r}={}){return!0}startServer(e,t){const r=require("http2");if(!(t.pfx||t.cert&&t.key)){console.warn("insufficient security provided; not using https",t);const s=r.createServer(t,this.handleRequest.bind(this));return s.listen(e||9600),s}const s=r.createSecureServer(t,this.handleRequest.bind(this));return s.listen(e||9600),s}}exports.default=ServiceProvider;